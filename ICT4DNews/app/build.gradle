apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: "androidx.navigation.safeargs"
apply from: 'tasks.gradle' // contains supporting tasks e.g ktlint

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "at.ict4d.ict4dnews"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/room_schemas".toString())
            }
        }

        compileOptions {
            sourceCompatibility 1.8
            targetCompatibility 1.8
        }
    }

    buildTypes {
        release {
            // TODO: set up signing configs
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            versionNameSuffix "-debug"
        }
    }

    androidExtensions {
        experimental = true
    }

    dataBinding {
        enabled = true
    }
}

// Exclude LeakCanary in tests
// Ensure the no-op dependency is always used in JVM tests.
configurations.all { config ->
    if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android Support Libs
    implementation "com.android.support:support-v4:$support_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "com.android.support:support-vector-drawable:$support_version"
    implementation "com.android.support:preference-v7:$support_version"
    implementation "com.android.support:support-annotations:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:customtabs:$support_version"
    implementation "com.android.support:multidex:1.0.3"

    // Dagger 2
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-common:0.9.1"
    implementation "androidx.core:core-ktx:0.3"

    // Logging
    implementation "com.jakewharton.timber:timber:4.7.1"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.2"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
    implementation "io.reactivex.rxjava2:rxkotlin:2.2.0"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-design-kotlin:$rxbinding_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version@aar"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"
    implementation "com.squareup.retrofit2:converter-simplexml:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // ThreeTenABP - java.time backport
    implementation "com.jakewharton.threetenabp:threetenabp:1.1.0"

    // *** Android Architecture Components ***
    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"
    // Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$lifecycle_version"
    // ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"

    // Room
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:$room_version"
    // RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // Stetho for debug
    implementation "com.facebook.stetho:stetho:1.5.0"
    implementation "com.facebook.stetho:stetho-okhttp3:1.5.0"

    // Testing
    testImplementation "junit:junit:4.12"
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:1.5.4"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.5.4"

    //KLint
    ktlint "com.github.shyiko:ktlint:0.24.0"

    // 3rd Party licenses
    implementation "com.google.android.gms:play-services-oss-licenses:16.0.0"
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha06' // use -ktx for Kotlin
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0-alpha06' // use -ktx for Kotlin
}
