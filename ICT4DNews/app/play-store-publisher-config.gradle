ext {
    playStorePublisherConfig = new PlayStorePublisherConfigLogic(project)
}

/**
 * This logic handles publishing App Bundles to the Play Store. The Play Store API needs a private key to authorize the
 * connection. This Gradle Class is used to load the file from a local file path.
 *
 * Local File
 * Provide a Properties file with the name "playstore.properties" in the root of the project with a value such as:
 * configPlayStoreJsonFilePath=[PUT HERE THE FILE PATH TO THE LOCAL SERVICE ACCOUNT PLAY STORE FILE]
 *
 */
class PlayStorePublisherConfigLogic {

    public final configPlayStoreJsonFilePath = "configPlayStoreJsonFilePath"
    private final configPlayStoreFileName = "playstore.properties"

    public final props

    private final project

    PlayStorePublisherConfigLogic(project) {
        this.project = project
        this.props = loadReleaseSigningProperties()
    }

    def loadReleaseSigningProperties() {

        Properties propertiesObj = new Properties()

        if ((propertiesObj = loadFromProperties("$project.rootDir/$configPlayStoreFileName")) != null) {
            project.logger.quiet("play-store-publisher-config: use local properties file for Play Store Publisher")
            return propertiesObj
        } else {
            propertiesObj.put(configPlayStoreJsonFilePath, "not_found.json")
        }

        project.logger.quiet("play-store-publisher-config: no JSON file found for the Play Store Publisher")
        return propertiesObj
    }

    def loadFromProperties(fileName) {
        Properties props = new Properties()
        File propfile = new File(fileName)

        if (propfile.exists()) {
            props.load(new FileInputStream(propfile))
            if (new File((String) props.get(configPlayStoreJsonFilePath)).exists()) {
                project.logger.quiet("play-store-publisher-config: use $fileName for Play Store Publisher")
                return props
            }
        } else {
            project.logger.quiet("play-store-publisher-config: $propfile does not exist for Play Store Publisher")
        }
        return null
    }
}
